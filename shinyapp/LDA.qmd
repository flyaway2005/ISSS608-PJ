---
title: "LDA"
format: html
---

```{r}
library(tidyverse)
library(tm)
library(topicmodels)
library(tidytext)

# 讀取資料
Cleaned_GP_LDA <- read_csv("data/Cleaned_GP_LDA.csv")
Cleaned_GP <- read_csv("data/Cleaned_GP.csv") %>%
  select(tender_no, award_date, awarded_amt, tender_detail_status)

# 定義停用詞
default_stopwords <- c(stopwords("en"), "please", "refer", "another", "one", "two", "three", 
                       "framework", "edition", "related", "whole", "period", "government", 
                       "entities", "various", "including", "requirement", "provide", "supply", 
                       "service", "procurement", "year", "option", "extend", "agreement", 
                       "singapore", "Singapore")

# 清理文字
Cleaned_GP_LDA <- Cleaned_GP_LDA %>%
  mutate(
    tender_clean = tender_description %>%
      tolower() %>%
      removePunctuation() %>%
      removeNumbers() %>%
      stripWhitespace() %>%
      removeWords(default_stopwords)
  )

# 建立 DTM
dtm <- Cleaned_GP_LDA %>%
  unnest_tokens(word, tender_clean) %>%
  count(tender_no, word) %>%
  cast_dtm(document = tender_no, term = word, value = n)

# 訓練 LDA 模型
lda_model <- LDA(dtm, k = 7, control = list(seed = 1234))

# 取得分類
lda_assignments <- tidy(lda_model, matrix = "gamma") %>%
  group_by(document) %>%
  top_n(1, gamma) %>%
  ungroup()

# 對應主題編號為分類名稱
lda_category_map <- function(topic) {
  case_when(
    topic == 1 ~ "General Procurement - Goods",
    topic == 2 ~ "General Procurement - Services",
    topic == 3 ~ "Engineering Procurement - Goods",
    topic == 4 ~ "Engineering Procurement - Services",
    topic == 5 ~ "Engineering Procurement - EPC",
    topic == 6 ~ "PPP Procurement - DBO",
    topic == 7 ~ "PPP Procurement - DBFO",
    TRUE ~ "Unclassified"
  )
}

# 合併回原始 Cleaned_GP_LDA
Cleaned_GP_LDA_LDA <- Cleaned_GP_LDA %>%
  left_join(lda_assignments, by = c("tender_no" = "document")) %>%
  mutate(LDA_Category = lda_category_map(topic))

# 合併 Cleaned_GP（含金額與日期）
Cleaned_GP_Final <- Cleaned_GP %>%
  mutate(
    tender_date = as.Date(award_date, format = "%d/%m/%Y"),
    tender_value = as.numeric(gsub("[^0-9.]", "", awarded_amt))
  ) %>%
  left_join(Cleaned_GP_LDA_LDA %>% select(tender_no, LDA_Category), by = "tender_no") %>%
  filter(!is.na(tender_date), !is.na(tender_value), !is.na(LDA_Category))

# 儲存結果
write_csv(Cleaned_GP_Final, "data/default_dataset_tender_market_analysis.csv")

cat("✅ default_dataset_tender_market_analysis.csv 已成功建立。\n")

```

```{r}
result <- read_csv("data/default_dataset_tender_market_analysis.csv")
glimpse(result)
```

```{r}
Cleaned_GP_LDA <- read_csv("data/Cleaned_GP_LDA.csv")
Cleaned_GP_LDA

```

```{r}
library(DiagrammeR)

grViz("
digraph LDA_Preparation {
  graph [layout = dot, rankdir = TB]
  node [shape = rect, style = filled, color = gray90, fontname = Helvetica]

  Start [shape = circle, label = '', width = 0.3, color = black, fillcolor = black]
  End [shape = circle, label = '', width = 0.3, color = black, fillcolor = black]

  Start -> A1
  A1 [label = 'Load raw data (CSV)']
  A1 -> A2
  A2 [label = 'Inspect structure using glimpse()']
  A2 -> A3
  A3 [label = 'Filter for awarded tenders only']
  A3 -> A4
  A4 [label = 'Lowercase tender_description']
  A4 -> A5
  A5 [label = 'Group by tender_no and check distinct descriptions']
  A5 -> A6
  A6 [label = 'Filter for distinct tender no. and tender description']
  A6 -> A7
  A7 [label = 'Clean special characters, symbols, punctuation']
  A7 -> A8
  A8 [label = 'Remove stop words and unnecessary text']
  A8 -> A9
  A9 [label = 'Tokenize and lemmatize description']
  A9 -> A10
  A10 [label = 'Recombine cleaned words into final string']
  A10 -> A11
  A11 [label = 'Write cleaned data to Cleaned_GP_LDA.csv']
  A11 -> End
}
")
```

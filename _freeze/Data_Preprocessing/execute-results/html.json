{
  "hash": "92c0a1ba59fefccded762befb188c8b4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Preprocessing\"\nauthor: \"Chang Fang Yu\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: True\n  eval: True\n  warning: false\n  freeze: true\n---\n\n\n\n# Data Preprocessing\n\n## Overview\n\nThis document details the data preprocessing steps for analyzing Singapore's government procurement data. The process includes data cleaning, text normalization, and preparation for subsequent analyses such as LDA topic modeling and network analysis.\n\n## Data Processing Steps\n\n### 1. Data Import and Initial Setup\n\nFirst, we load the necessary libraries and import the raw data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, plotly, \n               DT, GGally, parallelPlot, tidytext) \npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n```\n:::\n\n\n\nWe then import the government procurement dataset:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGP <- read_csv(\"data/GovernmentProcurementviaGeBIZ.csv\")\n```\n:::\n\n\n\n### 2. Initial Data Exploration\n\n#### Data Structure Analysis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(GP)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 18,638\nColumns: 7\n$ tender_no            <chr> \"ACR000ETT18300010\", \"ACR000ETT18300011\", \"ACR000…\n$ tender_description   <chr> \"SUPPLY, DESIGN, DEVELOPMENT, CUSTOMIZATION, DELI…\n$ agency               <chr> \"Accounting And Corporate Regulatory Authority\", …\n$ award_date           <chr> \"11/6/2019\", \"10/5/2019\", \"30/4/2019\", \"29/8/2019…\n$ tender_detail_status <chr> \"Awarded to Suppliers\", \"Awarded to No Suppliers\"…\n$ supplier_name        <chr> \"AZAAS PTE. LTD.\", \"Unknown\", \"ACCENTURE SG SERVI…\n$ awarded_amt          <dbl> 2305880.0, 0.0, 2035000.0, 30700373.9, 178800.0, …\n```\n\n\n:::\n:::\n\n\n\n#### Missing Values Assessment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(GP))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n#### Statistical Overview\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(GP)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  tender_no         tender_description    agency           award_date       \n Length:18638       Length:18638       Length:18638       Length:18638      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n tender_detail_status supplier_name       awarded_amt       \n Length:18638         Length:18638       Min.   :0.000e+00  \n Class :character     Class :character   1st Qu.:7.000e+03  \n Mode  :character     Mode  :character   Median :1.647e+05  \n                                         Mean   :5.540e+06  \n                                         3rd Qu.:8.227e+05  \n                                         Max.   :1.493e+09  \n```\n\n\n:::\n:::\n\n\n\n#### Data Fields Examination\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(GP)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"tender_no\"            \"tender_description\"   \"agency\"              \n[4] \"award_date\"           \"tender_detail_status\" \"supplier_name\"       \n[7] \"awarded_amt\"         \n```\n\n\n:::\n:::\n\n\n\n#### Tender Status Analysis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check different values in tender_detail_status column\ndistinct_statuses <- GP %>%\n  distinct(tender_detail_status) %>%\n  pull(tender_detail_status)\n\nprint(distinct_statuses)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Awarded to Suppliers\"      \"Awarded to No Suppliers\"  \n[3] \"Awarded by Items\"          \"Award by interface record\"\n```\n\n\n:::\n:::\n\n\n\n### 3. Data Cleaning Process\n\n#### Initial Data Filtering\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exclude invalid tenders\nbefore_count <- nrow(GP)\nCleaned_GP <- GP %>%\n  filter(tender_detail_status %in% c(\"Awarded to Suppliers\", \"Awarded by Items\", \"Award by interface record\"))\nafter_count <- nrow(Cleaned_GP)\n\nprint(paste(\"Original number of tenders:\", before_count))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Original number of tenders: 18638\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"Number of tenders after cleaning:\", after_count))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Number of tenders after cleaning: 17855\"\n```\n\n\n:::\n:::\n\n\n\n#### Saving Initial Cleaned Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(Cleaned_GP, \"data/Cleaned_GP.csv\")\nCleaned_GP_check <- read_csv(\"data/Cleaned_GP.csv\")\nhead(Cleaned_GP_check)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  tender_no         tender_description    agency award_date tender_detail_status\n  <chr>             <chr>                 <chr>  <chr>      <chr>               \n1 ACR000ETT18300010 SUPPLY, DESIGN, DEVE… Accou… 11/6/2019  Awarded to Suppliers\n2 ACR000ETT19300001 PROVISION OF CONSULT… Accou… 30/4/2019  Awarded to Suppliers\n3 ACR000ETT19300002 SUPPLY, DELIVERY, DE… Accou… 29/8/2019  Awarded to Suppliers\n4 ACR000ETT19300003 PROVISION OF MEDIA M… Accou… 6/8/2019   Awarded to Suppliers\n5 ACR000ETT19300004 INVITATION TO TENDER… Accou… 5/11/2019  Awarded to Suppliers\n6 ACR000ETT20300002 INVITATION TO TENDER… Accou… 10/11/2020 Awarded by Items    \n# ℹ 2 more variables: supplier_name <chr>, awarded_amt <dbl>\n```\n\n\n:::\n:::\n\n\n\n### 4. Text Processing and Analysis\n\n#### Tender Description Standardization\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nCleaned_GP <- read_csv(\"data/Cleaned_GP.csv\")\n\n# Text standardization\nCleaned_GP <- Cleaned_GP %>%\n  mutate(tender_description = tolower(tender_description))\n\n# Variation analysis\ntender_variations <- Cleaned_GP %>%\n  group_by(tender_no) %>%\n  summarise(n_unique_desc = n_distinct(tender_description), .groups = \"drop\") %>%\n  filter(n_unique_desc > 1)\n\ntender_detail_variations <- Cleaned_GP %>%\n  filter(tender_no %in% tender_variations$tender_no) %>%\n  arrange(tender_no)\n\nwrite_csv(tender_detail_variations, \"data/tender_description_variations.csv\")\n\nprint(paste(\"Found\", nrow(tender_variations), \"tender_no with different tender_descriptions\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Found 0 tender_no with different tender_descriptions\"\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(tender_detail_variations)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 7\n# ℹ 7 variables: tender_no <chr>, tender_description <chr>, agency <chr>,\n#   award_date <chr>, tender_detail_status <chr>, supplier_name <chr>,\n#   awarded_amt <dbl>\n```\n\n\n:::\n:::\n\n\n\n#### Advanced Text Cleaning\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stringr)\n\nCleaned_GP <- read_csv(\"data/cleaned_GP.csv\")\n\n# Comprehensive text cleaning\nCleaned_GP <- Cleaned_GP %>%\n  mutate(\n    tender_description = tolower(tender_description),\n    tender_description = str_squish(tender_description),\n    tender_description = str_replace_all(tender_description, \"[[:punct:]]\", \"\"),\n    tender_description = str_replace_all(tender_description, \"[^[:alnum:]\\\\s]\", \"\")\n  )\n\ntender_variation_check <- Cleaned_GP %>%\n  group_by(tender_no) %>%\n  summarise(unique_desc = unique(tender_description), .groups = \"drop\") %>%\n  filter(length(unique_desc) > 1)\n\nwrite_csv(Cleaned_GP, \"data/Cleaned_GP_cleaned.csv\")\nprint(nrow(tender_variation_check))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 11658\n```\n\n\n:::\n:::\n\n\n\n### 5. Duplicate Analysis and Resolution\n\n#### Identifying Duplicates\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCleaned_GP <- read_csv(\"data/Cleaned_GP_cleaned.csv\")\n\nduplicate_descriptions <- Cleaned_GP %>%\n  group_by(tender_description) %>%\n  summarise(n_tenders = n(), unique_tenders = n_distinct(tender_no), .groups = \"drop\") %>%\n  filter(n_tenders > 1)\n\nprint(paste(\"Found\", nrow(duplicate_descriptions), \"duplicate tender_descriptions\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Found 1742 duplicate tender_descriptions\"\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(duplicate_descriptions)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  tender_description                                    n_tenders unique_tenders\n  <chr>                                                     <int>          <int>\n1 1  1 year term contract for rectification works to e…         2              1\n2 1 courier services to transport covid19 samples swab…         2              1\n3 1 thermal transfer printer labels a rfid compatibili…         2              1\n4 1 this itt is structured to be awarded as a period c…         4              1\n5 1 year term contract for provision of 1 number of me…         4              1\n6 11 year term contract for minor civil engineering wo…         2              1\n```\n\n\n:::\n\n```{.r .cell-code}\ndetailed_duplicates <- Cleaned_GP %>%\n  filter(tender_description %in% duplicate_descriptions$tender_description) %>%\n  arrange(tender_description, tender_no)\n\nwrite_csv(detailed_duplicates, \"data/tender_description_duplicates.csv\")\nhead(detailed_duplicates)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  tender_no         tender_description    agency award_date tender_detail_status\n  <chr>             <chr>                 <chr>  <chr>      <chr>               \n1 JTC000ETT22000128 1  1 year term contr… Juron… 19/5/2023  Awarded by Items    \n2 JTC000ETT22000128 1  1 year term contr… Juron… 19/5/2023  Awarded by Items    \n3 NST000ETT21000096 1 courier services t… Agenc… 30/11/2021 Awarded by Items    \n4 NST000ETT21000096 1 courier services t… Agenc… 30/11/2021 Awarded by Items    \n5 NST000ETT21000084 1 thermal transfer p… Agenc… 2/11/2021  Awarded by Items    \n6 NST000ETT21000084 1 thermal transfer p… Agenc… 2/11/2021  Awarded by Items    \n# ℹ 2 more variables: supplier_name <chr>, awarded_amt <dbl>\n```\n\n\n:::\n:::\n\n\n\n## Final Data Preparation\n\n### Data Cleaning Summary\n\nThe data cleaning process revealed multiple instances of duplicate records in the dataset. These duplicates primarily arose from:\n\n1.  Multiple suppliers being awarded portions of the same tender\n2.  Variations in tender descriptions for the same tender number\n3.  System-generated duplicate entries\n\nFor LDA topic modeling, we needed to ensure each tender was represented only once to prevent bias in the word frequency distributions. Therefore, we:\n\n1.  Kept only the first occurrence of each unique tender_no and tender_description combination\n2.  Standardized all text data through comprehensive cleaning\n3.  Prepared separate datasets for different analysis purposes\n\n### Output Datasets\n\n#### Cleaned_GP_LDA.csv\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCGC <- read_csv(\"data/Cleaned_GP_cleaned.csv\")\n\nCleaned_GP_LDA <- CGC %>%\n  distinct(tender_no, tender_description, .keep_all = TRUE)\n\nwrite_csv(Cleaned_GP_LDA, \"data/Cleaned_GP_LDA.csv\")\n\nprint(paste(\"Original rows:\", nrow(Cleaned_GP)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Original rows: 17855\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"Final rows:\", nrow(Cleaned_GP_LDA)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Final rows: 11658\"\n```\n\n\n:::\n:::\n\n\n\n#### Final Validation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCleaned_GP_LDA <- read_csv(\"data/Cleaned_GP_LDA.csv\")\n\nduplicate_check <- Cleaned_GP_LDA %>%\n  group_by(tender_no, tender_description) %>%\n  summarise(count = n(), .groups = \"drop\") %>%\n  filter(count > 1)\n\nif (nrow(duplicate_check) == 0) {\n  print(\"✅ No duplicate tender_no + tender_description found. The data cleaning is correct!\")\n} else {\n  print(paste(\"⚠️ Found\", nrow(duplicate_check), \"duplicate records. Check the data again!\"))\n  head(duplicate_check)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"✅ No duplicate tender_no + tender_description found. The data cleaning is correct!\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"Original dataset rows:\", 17855))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Original dataset rows: 17855\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"After cleaning, remaining rows:\", nrow(Cleaned_GP_LDA)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"After cleaning, remaining rows: 11658\"\n```\n\n\n:::\n:::\n\n\n\n### Final Dataset Preview\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(Cleaned_GP_LDA)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  tender_no         tender_description    agency award_date tender_detail_status\n  <chr>             <chr>                 <chr>  <chr>      <chr>               \n1 ACR000ETT18300010 supply design develo… Accou… 11/6/2019  Awarded to Suppliers\n2 ACR000ETT19300001 provision of consult… Accou… 30/4/2019  Awarded to Suppliers\n3 ACR000ETT19300002 supply delivery desi… Accou… 29/8/2019  Awarded to Suppliers\n4 ACR000ETT19300003 provision of media m… Accou… 6/8/2019   Awarded to Suppliers\n5 ACR000ETT19300004 invitation to tender… Accou… 5/11/2019  Awarded to Suppliers\n6 ACR000ETT20300002 invitation to tender… Accou… 10/11/2020 Awarded by Items    \n# ℹ 2 more variables: supplier_name <chr>, awarded_amt <dbl>\n```\n\n\n:::\n:::\n\n\n\n### Data Preprocessing for LDA Topic Modeling Flow\n\n![](images/paste-1.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}